nclust=3,
iter.max=3,
centers=5)
#plot(k1$centers,w2$centers); abline(0,1/2)
gres = gmsClust(
conData=iris[,1:4],
catData=dummyCodeOneVar2(factor(iris$Species)),
nclust=3,
searchDensity = 10,
clustFun = wkmeans,
conDist = squaredEuc,
catDist = squaredEuc
)
gmsClust <- function(
conData,
catData,
nclust,
searchDensity = 10,
clustFun = wkmeans,
conDist = squaredEuc,
catDist = squaredEuc,
...
) {
# variable tests
conData <- as.data.frame(conData)
catData <- as.data.frame(catData)
# initializations
bestObj <- Inf
weights <- seq(0,1,length.out=searchDensity)
objFun <- rep(NaN,length(weights))
Qcon <- rep(NaN,length(weights))
Qcat <- rep(NaN,length(weights))
nullClustering <- clustFun(
conData=conData,
catData=catData,
conWeight=1/2,
nclust=1,
...
)
totalConDist <- sum(distFromData2Centroid(
dat=conData,
centroid=nullClustering$conCenters,
distFun = conDist
))
totalCatDist <- sum(distFromData2Centroid(
dat=catData,
centroid=nullClustering$catCenters,
distFun = catDist
))
for (i in 1:length(weights)) {
currentClustering <- clustFun(
conData=conData,
catData=catData,
conWeight=weights[i],
nclust=nclust,
...
)
withinConDist <- withinClusterDist(
conData,
centroids = currentClustering$conCenters,
distFun = conDist,
memberships = currentClustering$cluster
)
withinCatDist <- withinClusterDist(
catData,
centroids = currentClustering$catCenters,
distFun = catDist,
memberships = currentClustering$cluster
)
Qcon[i] <- withinConDist / (totalConDist - withinConDist)
Qcat[i] <- withinCatDist / (totalCatDist - withinCatDist)
# if w/in cluster distortion is worse than total, the clustering is infinitely bad
if (Qcon[i] < 0) Qcon[i] <- Inf
if (Qcat[i] < 0) Qcat[i] <- Inf
objFun[i] <- Qcon[i] * Qcat[i]
print(Qcon)
print(Qcat)
print(objFun)
if (i==1 || objFun[i] < bestObj) {
bestInd <- i
bestObj <- objFun[i]
bestRes <- currentClustering
}
}
return(
results = bestRes,
objFun = objFun,
Qcon = Qcon,
Qcat = Qcat,
bestInd = bestInd,
weights = weights
)
}
gres = gmsClust(
conData=iris[,1:4],
catData=dummyCodeOneVar2(factor(iris$Species)),
nclust=3,
searchDensity = 10,
clustFun = wkmeans,
conDist = squaredEuc,
catDist = squaredEuc
)
seq(0,1,by=1/10)
seq(1/10,1-1/10,by=1/10)
gmsClust <- function(
conData,
catData,
nclust,
searchDensity = 10,
clustFun = wkmeans,
conDist = squaredEuc,
catDist = squaredEuc,
...
) {
# variable tests
conData <- as.data.frame(conData)
catData <- as.data.frame(catData)
# initializations
bestObj <- Inf
weights <- seq(1/searchDensity,1-1/searchDensity,by=1/searchDensity)
objFun <- rep(NaN,length(weights))
Qcon <- rep(NaN,length(weights))
Qcat <- rep(NaN,length(weights))
nullClustering <- clustFun(
conData=conData,
catData=catData,
conWeight=1/2,
nclust=1,
...
)
totalConDist <- sum(distFromData2Centroid(
dat=conData,
centroid=nullClustering$conCenters,
distFun = conDist
))
totalCatDist <- sum(distFromData2Centroid(
dat=catData,
centroid=nullClustering$catCenters,
distFun = catDist
))
for (i in 1:length(weights)) {
currentClustering <- clustFun(
conData=conData,
catData=catData,
conWeight=weights[i],
nclust=nclust,
...
)
withinConDist <- withinClusterDist(
conData,
centroids = currentClustering$conCenters,
distFun = conDist,
memberships = currentClustering$cluster
)
withinCatDist <- withinClusterDist(
catData,
centroids = currentClustering$catCenters,
distFun = catDist,
memberships = currentClustering$cluster
)
Qcon[i] <- withinConDist / (totalConDist - withinConDist)
Qcat[i] <- withinCatDist / (totalCatDist - withinCatDist)
# if w/in cluster distortion is worse than total, the clustering is infinitely bad
if (Qcon[i] < 0) Qcon[i] <- Inf
if (Qcat[i] < 0) Qcat[i] <- Inf
objFun[i] <- Qcon[i] * Qcat[i]
print(Qcon)
print(Qcat)
print(objFun)
if (i==1 || objFun[i] < bestObj) {
bestInd <- i
bestObj <- objFun[i]
bestRes <- currentClustering
}
}
return(
results = bestRes,
objFun = objFun,
Qcon = Qcon,
Qcat = Qcat,
bestInd = bestInd,
weights = weights
)
}
gres = gmsClust(
conData=iris[,1:4],
catData=dummyCodeOneVar2(factor(iris$Species)),
nclust=3,
searchDensity = 10,
clustFun = wkmeans,
conDist = squaredEuc,
catDist = squaredEuc
)
gmsClust <- function(
conData,
catData,
nclust,
searchDensity = 10,
clustFun = wkmeans,
conDist = squaredEuc,
catDist = squaredEuc,
...
) {
# variable tests
conData <- as.data.frame(conData)
catData <- as.data.frame(catData)
# initializations
bestObj <- Inf
weights <- seq(1/searchDensity,1-1/searchDensity,by=1/searchDensity)
objFun <- rep(NaN,length(weights))
Qcon <- rep(NaN,length(weights))
Qcat <- rep(NaN,length(weights))
nullClustering <- clustFun(
conData=conData,
catData=catData,
conWeight=1/2,
nclust=1,
...
)
totalConDist <- sum(distFromData2Centroid(
dat=conData,
centroid=nullClustering$conCenters,
distFun = conDist
))
totalCatDist <- sum(distFromData2Centroid(
dat=catData,
centroid=nullClustering$catCenters,
distFun = catDist
))
for (i in 1:length(weights)) {
currentClustering <- clustFun(
conData=conData,
catData=catData,
conWeight=weights[i],
nclust=nclust,
...
)
withinConDist <- withinClusterDist(
conData,
centroids = currentClustering$conCenters,
distFun = conDist,
memberships = currentClustering$cluster
)
withinCatDist <- withinClusterDist(
catData,
centroids = currentClustering$catCenters,
distFun = catDist,
memberships = currentClustering$cluster
)
Qcon[i] <- withinConDist / (totalConDist - withinConDist)
Qcat[i] <- withinCatDist / (totalCatDist - withinCatDist)
# if w/in cluster distortion is worse than total, the clustering is infinitely bad
if (Qcon[i] < 0) Qcon[i] <- Inf
if (Qcat[i] < 0) Qcat[i] <- Inf
objFun[i] <- Qcon[i] * Qcat[i]
print(Qcon)
print(Qcat)
print(objFun)
if (i==1 || objFun[i] < bestObj) {
bestInd <- i
bestObj <- objFun[i]
bestRes <- currentClustering
}
}
return(list(
results = bestRes,
objFun = objFun,
Qcon = Qcon,
Qcat = Qcat,
bestInd = bestInd,
weights = weights
))
}
gres = gmsClust(
conData=iris[,1:4],
catData=dummyCodeOneVar2(factor(iris$Species)),
nclust=3,
searchDensity = 10,
clustFun = wkmeans,
conDist = squaredEuc,
catDist = squaredEuc
)
gres
# clustFun must be of the form f(conData,catData,conWeight,nclust,...);
# clustFun must return an element $cluster with cluster memberships denoted by integers 1:nclust
# clustFun must return an element $conCenters and $catCenters with cluster-specific centroids
# clustFun must allow nclust = 1, returning a $centers parameter with a single row
gmsClust <- function(
conData,
catData,
nclust,
searchDensity = 10,
clustFun = wkmeans,
conDist = squaredEuc,
catDist = squaredEuc,
...
) {
# variable tests
conData <- as.data.frame(conData)
catData <- as.data.frame(catData)
# initializations
bestObj <- Inf
weights <- seq(1/searchDensity,1-1/searchDensity,by=1/searchDensity)
objFun <- rep(NaN,length(weights))
Qcon <- rep(NaN,length(weights))
Qcat <- rep(NaN,length(weights))
nullClustering <- clustFun(
conData=conData,
catData=catData,
conWeight=1/2,
nclust=1,
...
)
totalConDist <- sum(distFromData2Centroid(
dat=conData,
centroid=nullClustering$conCenters,
distFun = conDist
))
totalCatDist <- sum(distFromData2Centroid(
dat=catData,
centroid=nullClustering$catCenters,
distFun = catDist
))
for (i in 1:length(weights)) {
currentClustering <- clustFun(
conData=conData,
catData=catData,
conWeight=weights[i],
nclust=nclust,
...
)
withinConDist <- withinClusterDist(
conData,
centroids = currentClustering$conCenters,
distFun = conDist,
memberships = currentClustering$cluster
)
withinCatDist <- withinClusterDist(
catData,
centroids = currentClustering$catCenters,
distFun = catDist,
memberships = currentClustering$cluster
)
Qcon[i] <- withinConDist / withinConDist # (totalConDist - withinConDist)
Qcat[i] <- withinCatDist / withinConDist # (totalCatDist - withinCatDist)
# if w/in cluster distortion is worse than total, the clustering is infinitely bad
if (Qcon[i] < 0) Qcon[i] <- Inf
if (Qcat[i] < 0) Qcat[i] <- Inf
objFun[i] <- Qcon[i] * Qcat[i]
print(Qcon)
print(Qcat)
print(objFun)
if (i==1 || objFun[i] < bestObj) {
bestInd <- i
bestObj <- objFun[i]
bestRes <- currentClustering
}
}
return(list(
results = bestRes,
objFun = objFun,
Qcon = Qcon,
Qcat = Qcat,
bestInd = bestInd,
weights = weights
))
}
#####################################
# tests
#####################################
set.seed(1)
w1 = wkmeans(
conData=iris[,1:4],
catData = dummyCodeOneVar2(factor(iris$Species)),
conWeight=1/2,
nclust=3,
iter.max=3)
set.seed(1)
k1 = kmeans(x=cbind(iris[,1:4],dummyCodeOneVar2(factor(iris$Species))),centers=3)
set.seed(1)
w2 = wkmeans(
conData=iris[,1:4],
catData = dummyCodeOneVar2(factor(iris$Species)),
conWeight=1/2,
nclust=3,
iter.max=3,
centers=5)
#plot(k1$centers,w2$centers); abline(0,1/2)
gres = gmsClust(
conData=iris[,1:4],
catData=dummyCodeOneVar2(factor(iris$Species)),
nclust=3,
searchDensity = 10,
clustFun = wkmeans,
conDist = squaredEuc,
catDist = squaredEuc
)
# clustFun must be of the form f(conData,catData,conWeight,nclust,...);
# clustFun must return an element $cluster with cluster memberships denoted by integers 1:nclust
# clustFun must return an element $conCenters and $catCenters with cluster-specific centroids
# clustFun must allow nclust = 1, returning a $centers parameter with a single row
gmsClust <- function(
conData,
catData,
nclust,
searchDensity = 10,
clustFun = wkmeans,
conDist = squaredEuc,
catDist = squaredEuc,
...
) {
# variable tests
conData <- as.data.frame(conData)
catData <- as.data.frame(catData)
# initializations
bestObj <- Inf
weights <- seq(1/searchDensity,1-1/searchDensity,by=1/searchDensity)
objFun <- rep(NaN,length(weights))
Qcon <- rep(NaN,length(weights))
Qcat <- rep(NaN,length(weights))
nullClustering <- clustFun(
conData=conData,
catData=catData,
conWeight=1/2,
nclust=1,
...
)
totalConDist <- sum(distFromData2Centroid(
dat=conData,
centroid=nullClustering$conCenters,
distFun = conDist
))
totalCatDist <- sum(distFromData2Centroid(
dat=catData,
centroid=nullClustering$catCenters,
distFun = catDist
))
for (i in 1:length(weights)) {
currentClustering <- clustFun(
conData=conData,
catData=catData,
conWeight=weights[i],
nclust=nclust,
...
)
withinConDist <- withinClusterDist(
conData,
centroids = currentClustering$conCenters,
distFun = conDist,
memberships = currentClustering$cluster
)
withinCatDist <- withinClusterDist(
catData,
centroids = currentClustering$catCenters,
distFun = catDist,
memberships = currentClustering$cluster
)
Qcon[i] <- withinConDist / totalConDist # (totalConDist - withinConDist)
Qcat[i] <- withinCatDist / totalCatDist # (totalCatDist - withinCatDist)
# if w/in cluster distortion is worse than total, the clustering is infinitely bad
if (Qcon[i] < 0) Qcon[i] <- Inf
if (Qcat[i] < 0) Qcat[i] <- Inf
objFun[i] <- Qcon[i] * Qcat[i]
print(Qcon)
print(Qcat)
print(objFun)
if (i==1 || objFun[i] < bestObj) {
bestInd <- i
bestObj <- objFun[i]
bestRes <- currentClustering
}
}
return(list(
results = bestRes,
objFun = objFun,
Qcon = Qcon,
Qcat = Qcat,
bestInd = bestInd,
weights = weights
))
}
#####################################
# tests
#####################################
set.seed(1)
w1 = wkmeans(
conData=iris[,1:4],
catData = dummyCodeOneVar2(factor(iris$Species)),
conWeight=1/2,
nclust=3,
iter.max=3)
set.seed(1)
k1 = kmeans(x=cbind(iris[,1:4],dummyCodeOneVar2(factor(iris$Species))),centers=3)
set.seed(1)
w2 = wkmeans(
conData=iris[,1:4],
catData = dummyCodeOneVar2(factor(iris$Species)),
conWeight=1/2,
nclust=3,
iter.max=3,
centers=5)
#plot(k1$centers,w2$centers); abline(0,1/2)
gres = gmsClust(
conData=iris[,1:4],
catData=dummyCodeOneVar2(factor(iris$Species)),
nclust=3,
searchDensity = 10,
clustFun = wkmeans,
conDist = squaredEuc,
catDist = squaredEuc
)
setwd("~/GitHub/kamila")
